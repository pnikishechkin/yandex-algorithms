package ru.nikishechkin.yandex_algorithms.lesson_1.g_destroy_barraks;

import java.io.FileReader;
import java.io.IOException;
import java.util.Scanner;

/**
 * G. Разрушить казарму
 *
 * Вы играете в интересную стратегию. У вашего соперника остались всего одна казарма — здание, в котором постоянно
 * появляются новые солдаты. Перед атакой у вас есть x солдат. За один раунд каждый солдат может убить одного из солдат
 * противника или нанести 1 очко урона казарме (вычесть единицу здоровья у казармы). Изначально у вашего оппонента нет
 * солдат. Тем не менее, его казарма имеет y единиц здоровья и производит p солдат за раунд.
 *
 * Ход одного раунда:
 *
 * Каждый солдат из вашей армии либо убивает одного из солдат вашего противника, либо наносит 1 очко урона казарме.
 * Каждый солдат может выбрать своё действие. Когда казарма теряет все свои единицы здоровья, она разрушается.
 * Ваш противник атакует. Он убьет k ваших солдат, где k — количество оставшихся у противника солдат.
 * Если казармы еще не разрушены, ваш противник производит p новых солдат.
 * Ваша задача — разрушить казарму и убить всех солдат противника. Если это возможно, посчитайте минимальное количество
 * раундов, которое вам нужно для этого. В противном случае выведите -1.
 *
 * Формат ввода
 * На вход подаётся три целых числа x, y, p (1 ≤ x, y, p ≤ 5000) — количество ваших солдат на старте игры, количество
 * очков здоровья казармы и количество производимых за раунд казармой солдат, соответственно. Каждое число расположено
 * в новой строке.
 *
 * Формат вывода
 * Если возможно убить всех вражеских солдат и разрушить казарму, выведите минимальное количество раундов, необходимых
 * для этого. В противном случае выведите -1.
 */
public class DestroyBarracks {
    public static void main(String[] args) {
        try (FileReader reader = new FileReader("resources\\lesson1\\inputG_2.txt")) {
            Scanner scanner = new Scanner(reader);
            int x = scanner.nextInt(); // количество моих солдат на старте
            int y = scanner.nextInt(); // количество очков здоровья казармы
            int p = scanner.nextInt(); // количество производимых за раунд казармой солдат

            int res = 0;
            int soldiers = 0;
            int t_x = 0; // Оставшиеся силы

            while (soldiers > 0 || y > 0) {
                System.out.println("МС:" + x + " С:" + soldiers + " К:" + y);
                t_x = x;

                // Если хватает сил уничтожить казарму
                if (y < x && y != 0) {

                    int yy = y + 1;

                    int my_soldiers;
                    int ostatok_soldat;
                    do {
                        yy--;

                        // Сколько у них останется солдат после атаки
                        ostatok_soldat = soldiers - (t_x - yy);
                        if (ostatok_soldat < 0) ostatok_soldat = 0;
                        // Количество моих солдат после их атаки
                        my_soldiers = x - ostatok_soldat;
                        // Количество солдат к следующему ходу
                        if (yy < y) {
                            ostatok_soldat += p;
                        }

                        System.out.print(my_soldiers + " " + ostatok_soldat + " " + yy + "\n");

                    } while (ostatok_soldat > ((my_soldiers / 2) + 1 + my_soldiers) && yy > 0);

                    t_x = x - yy;
                    y = y - yy;
                    if (y < 0) {
                        y = 0;
                    }
                }

                if (soldiers > 0) {
                    int t = t_x;
                    t_x = t_x - soldiers; // Сколько осталось сил после убийства солдат
                    soldiers -= t; // Сколько осталось солдат
                    if (soldiers < 0) {
                        soldiers = 0;
                    }
                    if (t_x < 0) {
                        t_x = 0;
                    }
                }
                if (t_x > 0 && y != 0) {
                    y -= t_x;
                }
                x -= soldiers;

                // Пока казарма не уничтожена, генерируем новых солдат противника
                if (y > 0) {
                    soldiers += p;
                }

                // Поражение
                if (x <= 0 ||
                        (y >= x && (soldiers + p - x) >= x)) {
                    res = -1;
                    break;
                }

                res++;
            }
            System.out.println(res);
        } catch (IOException ex) {
            System.out.println(ex.getMessage());
        }
    }
}
